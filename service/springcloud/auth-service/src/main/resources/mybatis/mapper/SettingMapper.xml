<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.anji.mirror.auth.mapper.SettingMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.anji.mirror.auth.domain.po.SettingPO">
        <id column="setting_id" property="settingId" />
        <result column="setting_name" property="settingName" />
        <result column="setting_label" property="settingLabel" />
        <result column="setting_type" property="settingType" />
        <result column="setting_form" property="settingForm" />
        <result column="setting_value" property="settingValue" />
        <result column="enable_flag" property="enableFlag" />
        <result column="remark" property="remark" />
        <result column="created_by" property="createdBy" />
        <result column="created_time" property="createdTime" />
        <result column="updated_by" property="updatedBy" />
        <result column="updated_time" property="updatedTime" />
        <result column="item_desc" property="itemDesc" />
    </resultMap>

    <!-- 自定义查询映射结果 -->
    <resultMap id="ResultMapWithVO" type="com.anji.mirror.auth.domain.vo.SettingVO" extends="BaseResultMap">
    </resultMap>

    <!-- 通用查询结果列 -->
<!--    <sql id="Base_Column_List">-->
<!--        setting_id, setting_name, setting_label, setting_type item_desc, item_desc setting_type,  setting_form, setting_value, enable_flag, remark, created_by, created_time, updated_by, updated_time-->
<!--    </sql>-->
    <sql id="Base_Column_List">
        t.setting_id, t.setting_name, t.setting_label, t.setting_type, d.item_desc,  t.setting_form, t.setting_value, t.enable_flag, t.remark, t.created_by, t.created_time, t.updated_by, t.updated_time
    </sql>

    <!-- 自定义分页查询 -->
    <select id="queryByPage" resultMap="ResultMapWithVO" parameterType="com.anji.mirror.auth.domain.vo.SettingVO">
        select
        <include refid="Base_Column_List" />
        from t_setting t
--         select d.item_desc,t.*, d.item_name FROM
        LEFT JOIN t_dict d on d.dict_name="SETTING-TYPE" and d.item_name= t.setting_type
        <where >
            <!-- 模糊查询参考 columnName LIKE CONCAT('%',#{keyword,jdbcType=VARCHAR},'%') -->
            <!-- 子查询参考 columnName IN <foreach collection="list" item="item" index="index" separator="," open="(" close=")">#{item}</foreach> -->
            <if test="settingVO.settingId != null and settingVO.settingId != ''" >
                and t.setting_id = #{settingVO.settingId}
            </if>
            <if test="settingVO.settingName != null and settingVO.settingName != ''" >
                and t.setting_name like CONCAT(CONCAT('%',#{settingVO.settingName,jdbcType=VARCHAR}),'%')
            </if>
            <if test="settingVO.settingLabel != null and settingVO.settingLabel != ''" >
                and t.setting_label like CONCAT(CONCAT('%',#{settingVO.settingLabel,jdbcType=VARCHAR}),'%')
            </if>
            <if test="settingVO.settingType != null and settingVO.settingType != ''" >
                and t.setting_type = #{settingVO.settingType}
            </if>
            <if test="settingVO.settingForm != null and settingVO.settingForm != ''" >
                and t.setting_form = #{settingVO.settingForm}
            </if>
            <if test="settingVO.settingValue != null and settingVO.settingValue != ''" >
                and t.setting_value = #{settingVO.settingValue}
            </if>
            <if test="settingVO.enableFlag != null and settingVO.enableFlag != ''" >
                and t.enable_flag = #{settingVO.enableFlag}
            </if>
            <if test="settingVO.remark != null and settingVO.remark != ''" >
                and t.remark = #{settingVO.remark}
            </if>
            <if test="settingVO.createdBy != null and settingVO.createdBy != ''" >
                and t.created_by = #{settingVO.createdBy}
            </if>
            <if test="settingVO.createdTime != null and settingVO.createdTime != ''" >
                and t.created_time = #{settingVO.createdTime}
            </if>
            <if test="settingVO.updatedBy != null and settingVO.updatedBy != ''" >
                and t.updated_by = #{settingVO.updatedBy}
            </if>
            <if test="settingVO.updatedTime != null and settingVO.updatedTime != ''" >
                and t.updated_time = #{settingVO.updatedTime}
            </if>
        </where>
        ORDER BY t.updated_time DESC
    </select>
</mapper>
