package ${package.Controller};
##实体名，首字母大写
#set($EntityName = ${entity.replace('PO','')})
##实体名，首字母小写
#set($entityName = "${EntityName.substring(0,1).toLowerCase()}${EntityName.substring(1)}")
##VO的包路径
#set($packageVOName = ${package.Entity.replace('.po','.vo')})

import ${packageVOName}.${EntityName}VO;
import ${package.Service}.${table.serviceName};
import RequestModel;
import ResponseModel;
import HasPermission;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author anji gaea teams
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath.replace('PO','')}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    private ${EntityName}Service ${entityName}Service;

    @PostMapping("/create")
    @HasPermission("${entityName}Manage:add")
    public ResponseModel create(@RequestBody RequestModel<${EntityName}VO> requestModel) {
        return ${entityName}Service.create(requestModel);
    }

    @PostMapping("/updateById")
    @HasPermission("${entityName}Manage:edit")
    public ResponseModel updateById(@RequestBody RequestModel<${EntityName}VO> requestModel) {
        return ${entityName}Service.updateById(requestModel);
    }

    @PostMapping("/deleteById")
    @HasPermission("${entityName}Manage:delete")
    public ResponseModel deleteById(@RequestBody RequestModel<${EntityName}VO> requestModel) {
        return ${entityName}Service.deleteById(requestModel);
    }

    @PostMapping("/queryById")
    @HasPermission("${entityName}Manage:find")
    public ResponseModel queryById(@RequestBody RequestModel<${EntityName}VO> requestModel) {
        return ${entityName}Service.queryById(requestModel);
    }

    @PostMapping("/queryByPage")
    @HasPermission("${entityName}Manage:find")
    public ResponseModel queryByPage(@RequestBody RequestModel<${EntityName}VO> requestModel) {
        return ${entityName}Service.queryByPage(requestModel);
    }
}

#end